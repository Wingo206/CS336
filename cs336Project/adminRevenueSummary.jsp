<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1" import="com.cs336.pkg.*"%>
<%@ page import="java.io.*,java.util.*,java.sql.*"%>
<%@ page import="javax.servlet.http.*,javax.servlet.*" %>


<!-- redirect client to access denied page -->
<%
	if (!"admin".equals((String) session.getAttribute("accountType"))) {
		response.sendRedirect("adminDeny.jsp");
	}
%>

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
		<title>Monthly Sales Report</title>
	</head>
	
	<body>
		<br>
			<form method="get" action="admin.jsp">
				<input type="submit" value="Return to admin page">
			</form>
		
		<!-- [Tommy] Produce a summary listing of revenue generated by a particular flight, airline, or
		customer

		flightNumber and airline and comes from "flight", ""
		join with flight ticket and uses to get revenue ???
		how to separate revenue for specific flights?

		use sum and group by for airline, flight (count group by flight + sort by desc to get most active), customer (sort by desc to get cust with most revenue)


		[Tommy] Find out which customer generated most total revenue
		[Tommy] Produce a list of most active flights (most tickets sold) -->
		



		<br>
		<form method="post" action="adminRevenueSummary.jsp">
		
		<table>
			<tr>    
				<td>Filter by flight: </td>
				<td>
					<select name="flightNumberFilter">
						<option value = "">[Flight Filter Reset]</option>
						<%
						// Get the database connection
						ApplicationDB db = new ApplicationDB();
						Connection con = db.getConnection();
						Statement stmt = con.createStatement();

						ResultSet flightResult = stmt.executeQuery("select flightNumber, departureAirport, arrivalAirport, departureTime from flight");
						while(flightResult.next()) {
							out.println("<option value=" + flightResult.getString("flightNumber") + ">" + flightResult.getString("flightNumber") + ". " + flightResult.getString("departureAirport") + " to " + flightResult.getString("arrivalAirport") + " - " + flightResult.getString("departureTime") + "</option>");
						}
						%>
					</select>
				</td>
			</tr>
			<tr>    
				<td>Filter by Airline: </td>
				<td>
					<select name="airlineFilter">
						<option value = "">[Airline Filter Reset]</option>
						<%
						ResultSet airlineResult = stmt.executeQuery("select airlineId from airline");
						while(airlineResult.next()) {
							out.println("<option value=" + airlineResult.getString("airlineId") + ">" + airlineResult.getString("airlineId") + "</option>");
						}
						%>
					</select>

				</td>
			</tr>
			<tr>    
				<td>Filter by Customer: </td>
				<td>
					<select name="customerFilter">
						<option value = "">[Customer Reset]</option>
						<%
						ResultSet accountResult = stmt.executeQuery("select username, firstName, lastName, accountType from account where accountType = \"customer\"");
						while(accountResult.next()) {
							out.println("<option value=" + accountResult.getString("username") + ">" + accountResult.getString("firstName") + " " + accountResult.getString("lastName") + "</option>");
						}
						%>
					</select>
				</td>
			</tr>

			
		<br>


		</table>
		
		<input type="submit" value="Apply Filter">

		</form>

		<br>
		<br>

		<form method="post" action="adminRevenueSummary.jsp">
			<input type="hidden" name = "sort" value = "customerRevenue">
			<input type="submit" value="Sort by total customer revenue">
		</form>

		<br>

		<form method="post" action="adminRevenueSummary.jsp">
			<input type="hidden" name = "sort" value = "activeFlights">
			<input type="submit" value="Sort by most active flight">
		</form>
		<br>
		<%	
		
		//out.println(request.getParameter("sort"));

		if(request.getParameter("sort") != null && request.getParameter("sort") != "") {
			String sortQuery = "";
			if(request.getParameter("sort").equals("customerRevenue")) {
				out.println("Viewing total revenue generated by customer");
				sortQuery = "select username, firstName, lastName, SUM(totalFare) as totalRevenue from flightticket join account on flightticket.passenger = account.username group by username order by totalRevenue desc";
			} else if(request.getParameter("sort").equals("activeFlights")) {
				out.println("Viewing most active flights");
				sortQuery = "select departureTime, departureAirport, arrivalAirport, ticketsSold from flight join ( select flight.flightNumber, count(flight.flightNumber) as ticketsSold from flightticket join uses on uses.ticketId = flightTicket.ticketId join flight on flight.flightNumber = uses.flightNumber group by flight.flightNumber) as t1 on t1.flightNumber = flight.flightNumber order by ticketsSold desc";
			}

			// Get metadata to retrieve column names
			ResultSet sortResult = stmt.executeQuery(sortQuery);
			ResultSetMetaData metaData = sortResult.getMetaData();

			int columnCount = metaData.getColumnCount();
			%>

			<table border="1">
				<tr>
					<%
					for (int i = 1; i <= columnCount; i++) {
						out.println("<th>" + metaData.getColumnName(i) + "</th>");
					}
					%>
				</tr>

				<%
				while (sortResult.next()) {
				%>
					<tr>
						<%
						for (int i = 1; i <= columnCount; i++) {
							out.println("<td>" + sortResult.getString(i) + "</td>");
						}
						%>
					</tr>
				<%
				}

				// Close the connection and resources
				db.closeConnection(con);
				%>
			</table>
		<%
		} else {

			String flightNumberFilter = request.getParameter("flightNumberFilter");
			String airlineFilter = request.getParameter("airlineFilter");
			String customerFilter = request.getParameter("customerFilter");

			//out.println("flighNumberFilter: " + flightNumberFilter);
			//out.println("airlineFilter: " + airlineFilter);
			//out.println("customerFilter: " + customerFilter);

			String str = "select username, firstName, lastName, totalFare, price, uses.flightNumber, departureAirport, arrivalAirport, departureTime, airline, bookingFee from flightticket join uses on flightticket.ticketId = uses.ticketId join flight on flight.flightNumber = uses.flightNumber join account on flightticket.passenger = account.username";

			String filterTitle = "";
			if(flightNumberFilter != null && flightNumberFilter != "") {
				str += " where flight.flightNumber = " + flightNumberFilter;
				filterTitle += "Filtering by flight ";
			}

			if(airlineFilter != null && airlineFilter != "") {
				if(flightNumberFilter != null && flightNumberFilter != "") {
					str += " and airline = \"" + airlineFilter +"\"";
					filterTitle += " and airline";
				} else {
					str += " where airline = \"" + airlineFilter +"\"";
					filterTitle = "Filtering by airline";
				}
			}

			if(customerFilter != null && customerFilter != "") {
				if((flightNumberFilter != null && flightNumberFilter != "") || (airlineFilter != null && airlineFilter != "")) {
					str += " and username = \"" + customerFilter +"\"";
					filterTitle += " and customer";
				} else {
					str += " where username = \"" + customerFilter +"\"";
					filterTitle = "Filtering by customer";
				}

			}

			if(filterTitle != "") {
				out.println(filterTitle);
			} else {
				out.println("Listing all purchased flights");
			}
			
			ResultSet result = stmt.executeQuery(str);

			// Get metadata to retrieve column names
			ResultSetMetaData metaData = result.getMetaData();

			int columnCount = metaData.getColumnCount();
			%>

			<table border="1">
				<tr>
					<%
					for (int i = 1; i <= columnCount; i++) {
						out.println("<th>" + metaData.getColumnName(i) + "</th>");
					}
					%>
				</tr>

				<%
				while (result.next()) {
				%>
					<tr>
						<%
						for (int i = 1; i <= columnCount; i++) {
							out.println("<td>" + result.getString(i) + "</td>");
						}
						%>
					</tr>
				<%
				}

				// Close the connection and resources
				db.closeConnection(con);
				%>
			</table>

<%
		}
%>


		
	</body>
</html>
